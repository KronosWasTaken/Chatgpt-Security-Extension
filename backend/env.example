# Database Configuration
DATABASE_URL=postgresql://postgres:password@localhost:5432/ai_compliance
DATABASE_URL_ASYNC=postgresql+asyncpg://postgres:password@localhost:5432/ai_compliance


# JWT Configuration
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
JWT_SECRET_KEY=your-generated-32-character-secret-key-here
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# Auth0 Configuration (Optional - for external auth)
AUTH0_DOMAIN=your-domain.auth0.com
AUTH0_CLIENT_ID=your-client-id
AUTH0_CLIENT_SECRET=your-client-secret
AUTH0_AUDIENCE=your-api-audience

# AWS Configuration (for production)
AWS_ACCESS_KEY_ID=your-access-key
AWS_SECRET_ACCESS_KEY=your-secret-key
AWS_REGION=us-east-1
AWS_KMS_KEY_ID=your-kms-key-id

# Application Configuration
APP_NAME=AI Compliance Platform
APP_VERSION=0.1.0
DEBUG=true
LOG_LEVEL=INFO

# CORS Configuration
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080,chrome-extension://*
ALLOWED_CREDENTIALS=true

# Rate Limiting
RATE_LIMIT_PER_MINUTE=100
RATE_LIMIT_BURST=200

# Security
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your-generated-32-character-secret-key-here
# Must be exactly 32 characters for encryption
ENCRYPTION_KEY=your-generated-32-character-encryption-key

# Monitoring
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090

# Email Configuration (for notifications)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_USE_TLS=true

# Webhook Configuration
WEBHOOK_SECRET=your-webhook-secret
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/webhook/url

# Compliance Settings
AUDIT_RETENTION_DAYS=2555  # 7 years for SOC2
ENCRYPTION_AT_REST=true
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM

# Development
RELOAD=true
HOST=0.0.0.0
PORT=8000
