"""added initial migration

Revision ID: 1cb4f09e7307
Revises: 
Create Date: 2025-09-28 17:46:36.711008

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1cb4f09e7307'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SCHEMA IF NOT EXISTS public")
    op.execute("CREATE SCHEMA IF NOT EXISTS shared")
    op.create_table('msps',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('subscription_tier', sa.String(length=50), nullable=False),
    sa.Column('billing_cycle', sa.String(length=50), nullable=False),
    sa.Column('business_type', sa.String(length=50), nullable=False),
    sa.Column('contact_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('billing_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('compliance_requirements', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('trial_ends_at', sa.Date(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_msps_id'), 'msps', ['id'], unique=False)
    op.create_table('ai_services',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('vendor', sa.String(length=36), nullable=False),
    sa.Column('domain_patterns', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('risk_level', sa.String(length=20), nullable=False),
    sa.Column('detection_patterns', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('service_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='shared'
    )
    op.create_index(op.f('ix_shared_ai_services_id'), 'ai_services', ['id'], unique=False, schema='shared')
    op.create_table('compliance_frameworks',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('version', sa.String(length=255), nullable=False),
    sa.Column('regulations', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('requirements', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('applicable_industries', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='shared'
    )
    op.create_index(op.f('ix_shared_compliance_frameworks_id'), 'compliance_frameworks', ['id'], unique=False, schema='shared')
    op.create_table('clients',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('industry', sa.String(length=100), nullable=False),
    sa.Column('company_size', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('subscription_tier', sa.String(length=50), nullable=False),
    sa.Column('billing_cycle', sa.String(length=50), nullable=False),
    sa.Column('business_type', sa.String(length=50), nullable=False),
    sa.Column('contact_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('billing_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('msp_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['msp_id'], ['msps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clients_id'), 'clients', ['id'], unique=False)
    op.create_table('portfolio_value_reports',
    sa.Column('msp_id', sa.UUID(), nullable=False),
    sa.Column('period', sa.String(length=50), nullable=False),
    sa.Column('coverage_delta', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('total_alerts', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('top_standardizations', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('estimated_savings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('highlights', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('next_actions', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['msp_id'], ['msps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_portfolio_value_reports_id'), 'portfolio_value_reports', ['id'], unique=False)
    op.create_index(op.f('ix_portfolio_value_reports_msp_id'), 'portfolio_value_reports', ['msp_id'], unique=False)
    op.create_table('detection_patterns',
    sa.Column('framework_id', sa.UUID(), nullable=False),
    sa.Column('pattern_type', sa.String(length=50), nullable=False),
    sa.Column('pattern_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('pattern_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('confidence_threshold', sa.Float(), nullable=False),
    sa.Column('context_rules', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['framework_id'], ['shared.compliance_frameworks.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='shared'
    )
    op.create_index(op.f('ix_shared_detection_patterns_framework_id'), 'detection_patterns', ['framework_id'], unique=False, schema='shared')
    op.create_index(op.f('ix_shared_detection_patterns_id'), 'detection_patterns', ['id'], unique=False, schema='shared')
    op.create_table('agent_engagement',
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('agent', sa.String(length=255), nullable=False),
    sa.Column('vendor', sa.String(length=255), nullable=False),
    sa.Column('icon', sa.String(length=100), nullable=True),
    sa.Column('deployed', sa.Integer(), nullable=False),
    sa.Column('avg_prompts_per_day', sa.Integer(), nullable=False),
    sa.Column('flagged_actions', sa.Integer(), nullable=False),
    sa.Column('trend_pct_7d', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('last_activity_iso', sa.String(length=50), nullable=True),
    sa.Column('associated_apps', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agent_engagement_client_id'), 'agent_engagement', ['client_id'], unique=False)
    op.create_index(op.f('ix_agent_engagement_date'), 'agent_engagement', ['date'], unique=False)
    op.create_index(op.f('ix_agent_engagement_id'), 'agent_engagement', ['id'], unique=False)
    op.create_table('alerts',
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('app', sa.String(length=255), nullable=True),
    sa.Column('asset_kind', sa.String(length=50), nullable=False),
    sa.Column('family', sa.String(length=50), nullable=False),
    sa.Column('subtype', sa.String(length=50), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('users_affected', sa.Integer(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('details', sa.Text(), nullable=False),
    sa.Column('frameworks', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alerts_client_id'), 'alerts', ['client_id'], unique=False)
    op.create_index(op.f('ix_alerts_id'), 'alerts', ['id'], unique=False)
    op.create_table('client_compliance_reports',
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('period', sa.String(length=50), nullable=False),
    sa.Column('coverage_percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('coverage_implemented', sa.Integer(), nullable=False),
    sa.Column('coverage_total', sa.Integer(), nullable=False),
    sa.Column('evidence_percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('evidence_complete', sa.Integer(), nullable=False),
    sa.Column('evidence_total', sa.Integer(), nullable=False),
    sa.Column('alert_summary', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('implemented_controls', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('open_gaps', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('engagement_highlights', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('next_actions', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_compliance_reports_client_id'), 'client_compliance_reports', ['client_id'], unique=False)
    op.create_index(op.f('ix_client_compliance_reports_id'), 'client_compliance_reports', ['id'], unique=False)
    op.create_table('client_metrics',
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('apps_monitored', sa.Integer(), nullable=False),
    sa.Column('interactions_monitored', sa.Integer(), nullable=False),
    sa.Column('agents_deployed', sa.Integer(), nullable=False),
    sa.Column('risk_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('compliance_coverage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_metrics_client_id'), 'client_metrics', ['client_id'], unique=False)
    op.create_index(op.f('ix_client_metrics_date'), 'client_metrics', ['date'], unique=False)
    op.create_index(op.f('ix_client_metrics_id'), 'client_metrics', ['id'], unique=False)
    op.create_table('client_policies',
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('rules', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('yaml', sa.Text(), nullable=True),
    sa.Column('last_modified', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_policies_client_id'), 'client_policies', ['client_id'], unique=False)
    op.create_index(op.f('ix_client_policies_id'), 'client_policies', ['id'], unique=False)
    op.create_table('clients_ai_services',
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('vendor', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=100), nullable=False),
    sa.Column('users', sa.Integer(), nullable=False),
    sa.Column('avg_daily_interactions', sa.Integer(), nullable=False),
    sa.Column('integrations', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ai_service_id', sa.UUID(), nullable=False),
    sa.Column('risk_tolerance', sa.String(length=20), nullable=False),
    sa.Column('department_restrictions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('approved_at', sa.Date(), nullable=True),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['ai_service_id'], ['shared.ai_services.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clients_ai_services_ai_service_id'), 'clients_ai_services', ['ai_service_id'], unique=False)
    op.create_index(op.f('ix_clients_ai_services_client_id'), 'clients_ai_services', ['client_id'], unique=False)
    op.create_index(op.f('ix_clients_ai_services_id'), 'clients_ai_services', ['id'], unique=False)
    op.create_table('msp_audit_summary',
    sa.Column('msp_id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('total_prompts', sa.Integer(), nullable=False),
    sa.Column('violations_count', sa.Integer(), nullable=False),
    sa.Column('blocked_attempts', sa.Integer(), nullable=False),
    sa.Column('warned_attempts', sa.Integer(), nullable=False),
    sa.Column('compliance_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('framework_scores', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ai_service_usage', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('department_breakdown', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['msp_id'], ['msps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_msp_audit_summary_id'), 'msp_audit_summary', ['id'], unique=False)
    op.create_table('productivity_correlations',
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('department', sa.String(length=100), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('ai_interactions_7d', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('output_metric_7d', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_productivity_correlations_client_id'), 'productivity_correlations', ['client_id'], unique=False)
    op.create_index(op.f('ix_productivity_correlations_date'), 'productivity_correlations', ['date'], unique=False)
    op.create_index(op.f('ix_productivity_correlations_department'), 'productivity_correlations', ['department'], unique=False)
    op.create_index(op.f('ix_productivity_correlations_id'), 'productivity_correlations', ['id'], unique=False)
    op.create_table('users',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('user_type', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.Date(), nullable=True),
    sa.Column('msp_id', sa.UUID(), nullable=True),
    sa.Column('client_id', sa.UUID(), nullable=True),
    sa.Column('role', sa.String(length=100), nullable=False),
    sa.Column('permissions', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['msp_id'], ['msps.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('client_ai_service_usage',
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('ai_service_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('daily_interactions', sa.Integer(), nullable=False),
    sa.Column('total_interactions', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['ai_service_id'], ['shared.ai_services.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_ai_service_usage_ai_service_id'), 'client_ai_service_usage', ['ai_service_id'], unique=False)
    op.create_index(op.f('ix_client_ai_service_usage_client_id'), 'client_ai_service_usage', ['client_id'], unique=False)
    op.create_index(op.f('ix_client_ai_service_usage_department'), 'client_ai_service_usage', ['department'], unique=False)
    op.create_index(op.f('ix_client_ai_service_usage_id'), 'client_ai_service_usage', ['id'], unique=False)
    op.create_index(op.f('ix_client_ai_service_usage_user_id'), 'client_ai_service_usage', ['user_id'], unique=False)
    op.create_table('client_audit_logs',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('ai_service_id', sa.UUID(), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('prompt_hash', sa.String(length=64), nullable=False),
    sa.Column('prompt_snippet', sa.Text(), nullable=False),
    sa.Column('prompt_length', sa.Integer(), nullable=False),
    sa.Column('detected_patterns', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('policy_violations', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('enforcement_action', sa.String(length=50), nullable=False),
    sa.Column('risk_score', sa.Numeric(precision=3, scale=2), nullable=False),
    sa.Column('confidence_score', sa.Numeric(precision=3, scale=2), nullable=False),
    sa.Column('url', sa.Text(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('ip_address', postgresql.INET(), nullable=True),
    sa.Column('browser_fingerprint', sa.String(length=255), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=False),
    sa.Column('audit_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['ai_service_id'], ['shared.ai_services.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_logs_ai_service', 'client_audit_logs', ['ai_service_id'], unique=False)
    op.create_index('idx_audit_logs_client_created', 'client_audit_logs', ['client_id', 'created_at'], unique=False)
    op.create_index('idx_audit_logs_user_created', 'client_audit_logs', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_client_audit_logs_client_id'), 'client_audit_logs', ['client_id'], unique=False)
    op.create_index(op.f('ix_client_audit_logs_id'), 'client_audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_client_audit_logs_user_id'), 'client_audit_logs', ['user_id'], unique=False)
    op.create_table('user_engagement',
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('avg_daily_interactions', sa.Integer(), nullable=False),
    sa.Column('delta_7d_pct', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_engagement_client_id'), 'user_engagement', ['client_id'], unique=False)
    op.create_index(op.f('ix_user_engagement_date'), 'user_engagement', ['date'], unique=False)
    op.create_index(op.f('ix_user_engagement_id'), 'user_engagement', ['id'], unique=False)
    op.create_index(op.f('ix_user_engagement_user_id'), 'user_engagement', ['user_id'], unique=False)
    op.create_table('client_policy_violations',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('audit_log_id', sa.UUID(), nullable=False),
    sa.Column('policy_id', sa.UUID(), nullable=False),
    sa.Column('isActive', sa.Boolean(), nullable=False),
    sa.Column('violation_type', sa.String(length=100), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('remediation_suggestion', sa.Text(), nullable=True),
    sa.Column('violation_details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_resolved', sa.Boolean(), nullable=False),
    sa.Column('resolved_at', sa.Date(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['audit_log_id'], ['client_audit_logs.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['policy_id'], ['client_policies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_policy_violations_audit_log_id'), 'client_policy_violations', ['audit_log_id'], unique=False)
    op.create_index(op.f('ix_client_policy_violations_client_id'), 'client_policy_violations', ['client_id'], unique=False)
    op.create_index(op.f('ix_client_policy_violations_id'), 'client_policy_violations', ['id'], unique=False)
    op.create_index(op.f('ix_client_policy_violations_policy_id'), 'client_policy_violations', ['policy_id'], unique=False)
    op.create_index(op.f('ix_client_policy_violations_user_id'), 'client_policy_violations', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_client_policy_violations_user_id'), table_name='client_policy_violations')
    op.drop_index(op.f('ix_client_policy_violations_policy_id'), table_name='client_policy_violations')
    op.drop_index(op.f('ix_client_policy_violations_id'), table_name='client_policy_violations')
    op.drop_index(op.f('ix_client_policy_violations_client_id'), table_name='client_policy_violations')
    op.drop_index(op.f('ix_client_policy_violations_audit_log_id'), table_name='client_policy_violations')
    op.drop_table('client_policy_violations')
    op.drop_index(op.f('ix_user_engagement_user_id'), table_name='user_engagement')
    op.drop_index(op.f('ix_user_engagement_id'), table_name='user_engagement')
    op.drop_index(op.f('ix_user_engagement_date'), table_name='user_engagement')
    op.drop_index(op.f('ix_user_engagement_client_id'), table_name='user_engagement')
    op.drop_table('user_engagement')
    op.drop_index(op.f('ix_client_audit_logs_user_id'), table_name='client_audit_logs')
    op.drop_index(op.f('ix_client_audit_logs_id'), table_name='client_audit_logs')
    op.drop_index(op.f('ix_client_audit_logs_client_id'), table_name='client_audit_logs')
    op.drop_index('idx_audit_logs_user_created', table_name='client_audit_logs')
    op.drop_index('idx_audit_logs_client_created', table_name='client_audit_logs')
    op.drop_index('idx_audit_logs_ai_service', table_name='client_audit_logs')
    op.drop_table('client_audit_logs')
    op.drop_index(op.f('ix_client_ai_service_usage_user_id'), table_name='client_ai_service_usage')
    op.drop_index(op.f('ix_client_ai_service_usage_id'), table_name='client_ai_service_usage')
    op.drop_index(op.f('ix_client_ai_service_usage_department'), table_name='client_ai_service_usage')
    op.drop_index(op.f('ix_client_ai_service_usage_client_id'), table_name='client_ai_service_usage')
    op.drop_index(op.f('ix_client_ai_service_usage_ai_service_id'), table_name='client_ai_service_usage')
    op.drop_table('client_ai_service_usage')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_productivity_correlations_id'), table_name='productivity_correlations')
    op.drop_index(op.f('ix_productivity_correlations_department'), table_name='productivity_correlations')
    op.drop_index(op.f('ix_productivity_correlations_date'), table_name='productivity_correlations')
    op.drop_index(op.f('ix_productivity_correlations_client_id'), table_name='productivity_correlations')
    op.drop_table('productivity_correlations')
    op.drop_index(op.f('ix_msp_audit_summary_id'), table_name='msp_audit_summary')
    op.drop_table('msp_audit_summary')
    op.drop_index(op.f('ix_clients_ai_services_id'), table_name='clients_ai_services')
    op.drop_index(op.f('ix_clients_ai_services_client_id'), table_name='clients_ai_services')
    op.drop_index(op.f('ix_clients_ai_services_ai_service_id'), table_name='clients_ai_services')
    op.drop_table('clients_ai_services')
    op.drop_index(op.f('ix_client_policies_id'), table_name='client_policies')
    op.drop_index(op.f('ix_client_policies_client_id'), table_name='client_policies')
    op.drop_table('client_policies')
    op.drop_index(op.f('ix_client_metrics_id'), table_name='client_metrics')
    op.drop_index(op.f('ix_client_metrics_date'), table_name='client_metrics')
    op.drop_index(op.f('ix_client_metrics_client_id'), table_name='client_metrics')
    op.drop_table('client_metrics')
    op.drop_index(op.f('ix_client_compliance_reports_id'), table_name='client_compliance_reports')
    op.drop_index(op.f('ix_client_compliance_reports_client_id'), table_name='client_compliance_reports')
    op.drop_table('client_compliance_reports')
    op.drop_index(op.f('ix_alerts_id'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_client_id'), table_name='alerts')
    op.drop_table('alerts')
    op.drop_index(op.f('ix_agent_engagement_id'), table_name='agent_engagement')
    op.drop_index(op.f('ix_agent_engagement_date'), table_name='agent_engagement')
    op.drop_index(op.f('ix_agent_engagement_client_id'), table_name='agent_engagement')
    op.drop_table('agent_engagement')
    op.drop_index(op.f('ix_shared_detection_patterns_id'), table_name='detection_patterns', schema='shared')
    op.drop_index(op.f('ix_shared_detection_patterns_framework_id'), table_name='detection_patterns', schema='shared')
    op.drop_table('detection_patterns', schema='shared')
    op.drop_index(op.f('ix_portfolio_value_reports_msp_id'), table_name='portfolio_value_reports')
    op.drop_index(op.f('ix_portfolio_value_reports_id'), table_name='portfolio_value_reports')
    op.drop_table('portfolio_value_reports')
    op.drop_index(op.f('ix_clients_id'), table_name='clients')
    op.drop_table('clients')
    op.drop_index(op.f('ix_shared_compliance_frameworks_id'), table_name='compliance_frameworks', schema='shared')
    op.drop_table('compliance_frameworks', schema='shared')
    op.drop_index(op.f('ix_shared_ai_services_id'), table_name='ai_services', schema='shared')
    op.drop_table('ai_services', schema='shared')
    op.drop_index(op.f('ix_msps_id'), table_name='msps')
    op.drop_table('msps')
    # ### end Alembic commands ###
