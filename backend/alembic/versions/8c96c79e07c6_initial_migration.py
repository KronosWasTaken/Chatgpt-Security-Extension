"""Initial migration

Revision ID: 8c96c79e07c6
Revises: 
Create Date: 2025-09-18 10:47:02.384862

"""
from alembic import op  # type: ignore
import sqlalchemy as sa  # type: ignore
from sqlalchemy.dialects import postgresql  # type: ignore

# revision identifiers, used by Alembic.
revision = '8c96c79e07c6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # Create schemas first
    op.execute('CREATE SCHEMA IF NOT EXISTS shared')
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('client_approved_ai_services',
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('ai_service_id', sa.String(length=36), nullable=False),
    sa.Column('approval_status', sa.String(length=20), nullable=False),
    sa.Column('conditions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('risk_tolerance', sa.String(length=20), nullable=False),
    sa.Column('department_restrictions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('time_restrictions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('data_restrictions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('approval_reason', sa.Text(), nullable=True),
    sa.Column('approved_at', sa.Date(), nullable=True),
    sa.Column('expires_at', sa.Date(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_approved_ai_services_client_id'), 'client_approved_ai_services', ['client_id'], unique=False)
    op.create_index(op.f('ix_client_approved_ai_services_id'), 'client_approved_ai_services', ['id'], unique=False)
    op.create_table('client_audit_logs',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('ai_service_id', sa.String(length=36), nullable=True),
    sa.Column('prompt_hash', sa.String(length=64), nullable=False),
    sa.Column('prompt_snippet', sa.Text(), nullable=False),
    sa.Column('prompt_length', sa.Integer(), nullable=False),
    sa.Column('detected_patterns', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('policy_violations', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('enforcement_action', sa.String(length=50), nullable=False),
    sa.Column('risk_score', sa.Numeric(precision=3, scale=2), nullable=False),
    sa.Column('confidence_score', sa.Numeric(precision=3, scale=2), nullable=False),
    sa.Column('url', sa.Text(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('ip_address', postgresql.INET(), nullable=True),
    sa.Column('browser_fingerprint', sa.String(length=255), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=False),
    sa.Column('audit_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_logs_ai_service', 'client_audit_logs', ['ai_service_id'], unique=False)
    op.create_index('idx_audit_logs_client_created', 'client_audit_logs', ['client_id', 'created_at'], unique=False)
    op.create_index('idx_audit_logs_user_created', 'client_audit_logs', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_client_audit_logs_client_id'), 'client_audit_logs', ['client_id'], unique=False)
    op.create_index(op.f('ix_client_audit_logs_id'), 'client_audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_client_audit_logs_user_id'), 'client_audit_logs', ['user_id'], unique=False)
    op.create_table('client_departments',
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('manager_email', sa.String(length=255), nullable=True),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('compliance_requirements', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_departments_client_id'), 'client_departments', ['client_id'], unique=False)
    op.create_index(op.f('ix_client_departments_id'), 'client_departments', ['id'], unique=False)
    op.create_table('client_policies',
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('framework_id', sa.String(length=36), nullable=True),
    sa.Column('rules', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('enforcement_level', sa.String(length=20), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('conditions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('exceptions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('effective_date', sa.Date(), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_policies_client_id'), 'client_policies', ['client_id'], unique=False)
    op.create_index(op.f('ix_client_policies_id'), 'client_policies', ['id'], unique=False)
    op.create_table('client_policy_violations',
    sa.Column('audit_log_id', sa.UUID(), nullable=False),
    sa.Column('policy_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('violation_type', sa.String(length=100), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('remediation_suggestion', sa.Text(), nullable=True),
    sa.Column('violation_details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_resolved', sa.Boolean(), nullable=False),
    sa.Column('resolved_at', sa.Date(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_policy_violations_audit_log_id'), 'client_policy_violations', ['audit_log_id'], unique=False)
    op.create_index(op.f('ix_client_policy_violations_id'), 'client_policy_violations', ['id'], unique=False)
    op.create_index(op.f('ix_client_policy_violations_policy_id'), 'client_policy_violations', ['policy_id'], unique=False)
    op.create_index(op.f('ix_client_policy_violations_user_id'), 'client_policy_violations', ['user_id'], unique=False)
    op.create_table('client_users',
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('permissions', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('job_title', sa.String(length=100), nullable=True),
    sa.Column('employee_id', sa.String(length=50), nullable=True),
    sa.Column('manager_email', sa.String(length=255), nullable=True),
    sa.Column('profile_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('auth_provider_id', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.Date(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_client_users_client_id'), 'client_users', ['client_id'], unique=False)
    op.create_index(op.f('ix_client_users_id'), 'client_users', ['id'], unique=False)
    op.create_table('msps',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('business_type', sa.String(length=50), nullable=False),
    sa.Column('subscription_tier', sa.String(length=50), nullable=False),
    sa.Column('billing_cycle', sa.String(length=20), nullable=False),
    sa.Column('contact_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('billing_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('compliance_requirements', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('trial_ends_at', sa.Date(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_msps_id'), 'msps', ['id'], unique=False)
    op.create_table('ai_services',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('domain_patterns', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('risk_level', sa.String(length=20), nullable=False),
    sa.Column('detection_patterns', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('service_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='shared'
    )
    op.create_index(op.f('ix_shared_ai_services_id'), 'ai_services', ['id'], unique=False, schema='shared')
    op.create_table('compliance_frameworks',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('regulations', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('requirements', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('applicable_industries', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='shared'
    )
    op.create_index(op.f('ix_shared_compliance_frameworks_id'), 'compliance_frameworks', ['id'], unique=False, schema='shared')
    op.create_table('detection_patterns',
    sa.Column('framework_id', sa.String(length=36), nullable=False),
    sa.Column('pattern_type', sa.String(length=50), nullable=False),
    sa.Column('pattern_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('pattern_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('confidence_threshold', sa.Float(), nullable=False),
    sa.Column('context_rules', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='shared'
    )
    op.create_index(op.f('ix_shared_detection_patterns_framework_id'), 'detection_patterns', ['framework_id'], unique=False, schema='shared')
    op.create_index(op.f('ix_shared_detection_patterns_id'), 'detection_patterns', ['id'], unique=False, schema='shared')
    op.create_table('clients',
    sa.Column('msp_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('industry', sa.String(length=100), nullable=False),
    sa.Column('company_size', sa.String(length=20), nullable=False),
    sa.Column('compliance_requirements', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('schema_name', sa.String(length=63), nullable=False),
    sa.Column('contact_email', sa.String(length=255), nullable=False),
    sa.Column('primary_contact_name', sa.String(length=100), nullable=False),
    sa.Column('primary_contact_phone', sa.String(length=20), nullable=False),
    sa.Column('company_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('onboarding_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('contract_start_date', sa.Date(), nullable=True),
    sa.Column('contract_end_date', sa.Date(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['msp_id'], ['msps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clients_id'), 'clients', ['id'], unique=False)
    op.create_table('msp_users',
    sa.Column('msp_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('permissions', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('job_title', sa.String(length=100), nullable=True),
    sa.Column('auth_provider_id', sa.String(length=255), nullable=False),
    sa.Column('profile_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.Date(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['msp_id'], ['msps.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_msp_users_id'), 'msp_users', ['id'], unique=False)
    op.create_table('msp_audit_summary',
    sa.Column('msp_id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('total_prompts', sa.Integer(), nullable=False),
    sa.Column('violations_count', sa.Integer(), nullable=False),
    sa.Column('blocked_attempts', sa.Integer(), nullable=False),
    sa.Column('warned_attempts', sa.Integer(), nullable=False),
    sa.Column('compliance_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('framework_scores', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ai_service_usage', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('department_breakdown', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('generated_at', sa.Date(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['msp_id'], ['msps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_msp_audit_summary_id'), 'msp_audit_summary', ['id'], unique=False)
    op.create_table('msp_client_assignments',
    sa.Column('msp_id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('msp_user_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('responsibilities', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('is_primary_contact', sa.Boolean(), nullable=False),
    sa.Column('assigned_at', sa.Date(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['msp_id'], ['msps.id'], ),
    sa.ForeignKeyConstraint(['msp_user_id'], ['msp_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_msp_client_assignments_id'), 'msp_client_assignments', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_msp_client_assignments_id'), table_name='msp_client_assignments')
    op.drop_table('msp_client_assignments')
    op.drop_index(op.f('ix_msp_audit_summary_id'), table_name='msp_audit_summary')
    op.drop_table('msp_audit_summary')
    op.drop_index(op.f('ix_msp_users_id'), table_name='msp_users')
    op.drop_table('msp_users')
    op.drop_index(op.f('ix_clients_id'), table_name='clients')
    op.drop_table('clients')
    op.drop_index(op.f('ix_shared_detection_patterns_id'), table_name='detection_patterns', schema='shared')
    op.drop_index(op.f('ix_shared_detection_patterns_framework_id'), table_name='detection_patterns', schema='shared')
    op.drop_table('detection_patterns', schema='shared')
    op.drop_index(op.f('ix_shared_compliance_frameworks_id'), table_name='compliance_frameworks', schema='shared')
    op.drop_table('compliance_frameworks', schema='shared')
    op.drop_index(op.f('ix_shared_ai_services_id'), table_name='ai_services', schema='shared')
    op.drop_table('ai_services', schema='shared')
    op.drop_index(op.f('ix_msps_id'), table_name='msps')
    op.drop_table('msps')
    op.drop_index(op.f('ix_client_users_id'), table_name='client_users')
    op.drop_index(op.f('ix_client_users_client_id'), table_name='client_users')
    op.drop_table('client_users')
    op.drop_index(op.f('ix_client_policy_violations_user_id'), table_name='client_policy_violations')
    op.drop_index(op.f('ix_client_policy_violations_policy_id'), table_name='client_policy_violations')
    op.drop_index(op.f('ix_client_policy_violations_id'), table_name='client_policy_violations')
    op.drop_index(op.f('ix_client_policy_violations_audit_log_id'), table_name='client_policy_violations')
    op.drop_table('client_policy_violations')
    op.drop_index(op.f('ix_client_policies_id'), table_name='client_policies')
    op.drop_index(op.f('ix_client_policies_client_id'), table_name='client_policies')
    op.drop_table('client_policies')
    op.drop_index(op.f('ix_client_departments_id'), table_name='client_departments')
    op.drop_index(op.f('ix_client_departments_client_id'), table_name='client_departments')
    op.drop_table('client_departments')
    op.drop_index(op.f('ix_client_audit_logs_user_id'), table_name='client_audit_logs')
    op.drop_index(op.f('ix_client_audit_logs_id'), table_name='client_audit_logs')
    op.drop_index(op.f('ix_client_audit_logs_client_id'), table_name='client_audit_logs')
    op.drop_index('idx_audit_logs_user_created', table_name='client_audit_logs')
    op.drop_index('idx_audit_logs_client_created', table_name='client_audit_logs')
    op.drop_index('idx_audit_logs_ai_service', table_name='client_audit_logs')
    op.drop_table('client_audit_logs')
    op.drop_index(op.f('ix_client_approved_ai_services_id'), table_name='client_approved_ai_services')
    op.drop_index(op.f('ix_client_approved_ai_services_client_id'), table_name='client_approved_ai_services')
    op.drop_table('client_approved_ai_services')
    # ### end Alembic commands ###
